{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nexport class SvgIconComponent {\n  constructor(http, sanitazer) {\n    this.http = http;\n    this.sanitazer = sanitazer;\n  }\n  ngOnChanges(changes) {\n    if (!this.src) {\n      this.svg = '';\n      return;\n    }\n    this.http.get(this.src, {\n      responseType: 'text'\n    }).subscribe(value => {\n      this.svg = this.sanitazer.bypassSecurityTrustHtml(value);\n    });\n  }\n}\nSvgIconComponent.ɵfac = function SvgIconComponent_Factory(t) {\n  return new (t || SvgIconComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\nSvgIconComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SvgIconComponent,\n  selectors: [[\"app-svg-icon\"]],\n  inputs: {\n    src: \"src\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"innerHTML\"]],\n  template: function SvgIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"span\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", ctx.svg, i0.ɵɵsanitizeHtml);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,IAAgB,EAAUC,SAAuB;IAAjD,SAAI,GAAJD,IAAI;IAAsB,cAAS,GAATC,SAAS;EAAiB;EAExEC,WAAW,CAACC,OAAsB;IAChC,IAAI,CAAC,IAAI,CAACC,GAAG,EAAE;MACb,IAAI,CAACC,GAAG,GAAG,EAAE;MACb;;IAEF,IAAI,CAACL,IAAI,CACNM,GAAG,CAAC,IAAI,CAACF,GAAG,EAAE;MAAEG,YAAY,EAAE;IAAM,CAAE,CAAC,CACvCC,SAAS,CAACC,KAAK,IAAG;MACjB,IAAI,CAACJ,GAAG,GAAG,IAAI,CAACJ,SAAS,CAACS,uBAAuB,CAACD,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN;;AAhBWX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAa;EAAAC;IAAAR;EAAA;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT7BC,0BAA+B;;;MAAzBA,sDAAiB","names":["SvgIconComponent","constructor","http","sanitazer","ngOnChanges","changes","src","svg","get","responseType","subscribe","value","bypassSecurityTrustHtml","selectors","inputs","features","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Laila\\Desktop\\date-timer-main\\the-timer-extended\\src\\app\\components\\svg-icon\\svg-icon.component.ts","C:\\Users\\Laila\\Desktop\\date-timer-main\\the-timer-extended\\src\\app\\components\\svg-icon\\svg-icon.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-svg-icon',\n  templateUrl: './svg-icon.component.html',\n  styleUrls: ['./svg-icon.component.scss']\n})\nexport class SvgIconComponent implements OnChanges{\n  @Input() src!: string;\n  svg: any;\n\n  constructor(private http: HttpClient, private sanitazer: DomSanitizer) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.src) {\n      this.svg = ''\n      return;\n    }\n    this.http\n      .get(this.src, { responseType: 'text' })\n      .subscribe(value => {\n        this.svg = this.sanitazer.bypassSecurityTrustHtml(value)\n      })\n  }\n  \n\n}\n","<span [innerHTML]=\"svg\"></span>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}