{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../countdown-timer-card/countdown-timer-card.component\";\nexport class CountdownTimerComponent {\n  onButtonClick(input) {\n    this.launchDate = new Date(input.value);\n    this.updateValues();\n    interval(1000).subscribe(x => this.updateValues());\n  }\n  ngOnInit() {}\n  updateValues() {\n    let currentDate = new Date();\n    let diffTime = (this.launchDate.getTime() - currentDate.getTime()) / 1000;\n    diffTime = Math.max(0, diffTime);\n    this.years = Math.floor(diffTime / (86400 * 365)); // 86400 seconds in a day\n    diffTime -= this.years * 86400 * 365;\n    this.months = Math.floor(diffTime / (86400 * 30)); // Assuming an average month has 30 days\n    diffTime -= this.months * 86400 * 30;\n    this.days = Math.floor(diffTime / 86400) % 30; // The remaining days after years and months\n    diffTime -= this.days * 86400;\n    this.hours = Math.floor(diffTime / 3600) % 24;\n    diffTime -= this.hours * 3600;\n    this.minutes = Math.floor(diffTime / 60) % 60;\n    diffTime -= this.minutes * 60;\n    this.seconds = Math.floor(diffTime % 60);\n  }\n  ngOnDestroy() {}\n}\nCountdownTimerComponent.ɵfac = function CountdownTimerComponent_Factory(t) {\n  return new (t || CountdownTimerComponent)();\n};\nCountdownTimerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CountdownTimerComponent,\n  selectors: [[\"app-countdown-timer\"]],\n  decls: 6,\n  vars: 6,\n  consts: [[\"label\", \"Years\", 3, \"value\"], [\"label\", \"months\", 3, \"value\"], [\"label\", \"days\", 3, \"value\"], [\"label\", \"hours\", 3, \"value\"], [\"label\", \"minutes\", 3, \"value\"], [\"label\", \"seconds\", 3, \"value\"]],\n  template: function CountdownTimerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-countdown-timer-card\", 0)(1, \"app-countdown-timer-card\", 1)(2, \"app-countdown-timer-card\", 2)(3, \"app-countdown-timer-card\", 3)(4, \"app-countdown-timer-card\", 4)(5, \"app-countdown-timer-card\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.years);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.months);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.days);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.hours);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.minutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", ctx.seconds);\n    }\n  },\n  dependencies: [i1.CountdownTimerCardComponent],\n  styles: [\"[_nghost-%COMP%] {\\n  display: grid;\\n  gap: 12px;\\n  grid-template-columns: repeat(6, minmax(0, 3fr));\\n  width: max-content;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb3VudGRvd24tdGltZXIvY291bnRkb3duLXRpbWVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLFNBQUE7RUFDQSxnREFBQTtFQUNBLGtCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6Z3JpZDtcbiAgZ2FwOiAxMnB4O1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCBtaW5tYXgoMCwgM2ZyKSk7XG4gIHdpZHRoOiBtYXgtY29udGVudDtcblxufVxuLy8gYnUgc3RpbCBrdXJhbMOEwrFuw4TCsW4gQW5ndWxhciBiaWxlw4XCn2VuaW5pbiBrZW5kaXNpIMODwrx6ZXJpbmRlIHV5Z3VsYW5hY2HDhMKfw4TCsW7DhMKxIGJlbGlydGlyLlxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,MAAM;;;AAO/B,OAAM,MAAOC,uBAAuB;EAGlCC,aAAa,CAACC,KAAuB;IACnC,IAAI,CAACC,UAAU,GAAG,IAAIC,IAAI,CAACF,KAAK,CAACG,KAAK,CAAC;IACvC,IAAI,CAACC,YAAY,EAAE;IAClBP,QAAQ,CAAC,IAAI,CAAC,CAACQ,SAAS,CAAEC,CAAC,IAAK,IAAI,CAACF,YAAY,EAAE,CAAC;EACvD;EASAG,QAAQ,IAAW;EAEnBH,YAAY;IACV,IAAII,WAAW,GAAG,IAAIN,IAAI,EAAE;IAE5B,IAAIO,QAAQ,GAAG,CAAC,IAAI,CAACR,UAAU,CAACS,OAAO,EAAE,GAAGF,WAAW,CAACE,OAAO,EAAE,IAAI,IAAI;IACzED,QAAQ,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,QAAQ,CAAC;IAEhC,IAAI,CAACI,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACL,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACnDA,QAAQ,IAAI,IAAI,CAACI,KAAK,GAAG,KAAK,GAAG,GAAG;IAEpC,IAAI,CAACE,MAAM,GAAGJ,IAAI,CAACG,KAAK,CAACL,QAAQ,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACnDA,QAAQ,IAAI,IAAI,CAACM,MAAM,GAAG,KAAK,GAAG,EAAE;IAEpC,IAAI,CAACC,IAAI,GAAGL,IAAI,CAACG,KAAK,CAACL,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;IAC/CA,QAAQ,IAAI,IAAI,CAACO,IAAI,GAAG,KAAK;IAE7B,IAAI,CAACC,KAAK,GAAGN,IAAI,CAACG,KAAK,CAACL,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE;IAC7CA,QAAQ,IAAI,IAAI,CAACQ,KAAK,GAAG,IAAI;IAE7B,IAAI,CAACC,OAAO,GAAGP,IAAI,CAACG,KAAK,CAACL,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE;IAC7CA,QAAQ,IAAI,IAAI,CAACS,OAAO,GAAG,EAAE;IAE7B,IAAI,CAACC,OAAO,GAAGR,IAAI,CAACG,KAAK,CAACL,QAAQ,GAAG,EAAE,CAAC;EAC1C;EACAW,WAAW,IAAK;;AAzCLtB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRpCC,8CAAmF;;;MAAzDA,iCAAe;MACfA,eAAgB;MAAhBA,kCAAgB;MAChBA,eAAc;MAAdA,gCAAc;MACdA,eAAe;MAAfA,iCAAe;MACfA,eAAiB;MAAjBA,mCAAiB;MACjBA,eAAiB;MAAjBA,mCAAiB","names":["interval","CountdownTimerComponent","onButtonClick","input","launchDate","Date","value","updateValues","subscribe","x","ngOnInit","currentDate","diffTime","getTime","Math","max","years","floor","months","days","hours","minutes","seconds","ngOnDestroy","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Laila\\Desktop\\date-timer-main\\the-timer-extended\\src\\app\\components\\countdown-timer\\countdown-timer.component.ts","C:\\Users\\Laila\\Desktop\\date-timer-main\\the-timer-extended\\src\\app\\components\\countdown-timer\\countdown-timer.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-countdown-timer',\n  templateUrl: './countdown-timer.component.html',\n  styleUrls: ['./countdown-timer.component.scss'],\n})\nexport class CountdownTimerComponent implements OnInit, OnDestroy {\n  years: number;\n  months: number;\n  onButtonClick(input: HTMLInputElement) {\n    this.launchDate = new Date(input.value);\n    this.updateValues();\n     interval(1000).subscribe((x) => this.updateValues());\n  }\n\n  launchDate: Date;\n  \n  days!: number;\n  hours!: number;\n  minutes!: number;\n  seconds!: number;\n\n  ngOnInit(): void { }\n\n  updateValues() {\n    let currentDate = new Date();\n\n    let diffTime = (this.launchDate.getTime() - currentDate.getTime()) / 1000;\n    diffTime = Math.max(0, diffTime);\n\n    this.years = Math.floor(diffTime / (86400 * 365)); // 86400 seconds in a day\n    diffTime -= this.years * 86400 * 365;\n\n    this.months = Math.floor(diffTime / (86400 * 30)); // Assuming an average month has 30 days\n    diffTime -= this.months * 86400 * 30;\n\n    this.days = Math.floor(diffTime / 86400) % 30; // The remaining days after years and months\n    diffTime -= this.days * 86400;\n\n    this.hours = Math.floor(diffTime / 3600) % 24;\n    diffTime -= this.hours * 3600;\n\n    this.minutes = Math.floor(diffTime / 60) % 60;\n    diffTime -= this.minutes * 60;\n\n    this.seconds = Math.floor(diffTime % 60);\n  }\n  ngOnDestroy() { }\n}\n","<app-countdown-timer-card [value]=\"years\" label=\"Years\"></app-countdown-timer-card>\n<app-countdown-timer-card [value]=\"months\" label=\"months\"></app-countdown-timer-card>\n<app-countdown-timer-card [value]=\"days\" label=\"days\"></app-countdown-timer-card>\n<app-countdown-timer-card [value]=\"hours\" label=\"hours\"></app-countdown-timer-card>\n<app-countdown-timer-card [value]=\"minutes\" label=\"minutes\"></app-countdown-timer-card>\n<app-countdown-timer-card [value]=\"seconds\" label=\"seconds\"></app-countdown-timer-card>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}